Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    alias(libs.plugins.androidApplication)\r\n    alias(libs.plugins.jetbrainsKotlinAndroid)\r\n}\r\n\r\nandroid {\r\n    namespace = \"com.example.tesis1\"\r\n    compileSdk = 34\r\n\r\n    defaultConfig {\r\n        applicationId = \"com.example.tesis1\"\r\n        minSdk = 21\r\n        targetSdk = 34\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n        vectorDrawables {\r\n            useSupportLibrary = true\r\n        }\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(\r\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\r\n                \"proguard-rules.pro\"\r\n            )\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_1_8\r\n        targetCompatibility = JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = \"1.8\"\r\n    }\r\n    buildFeatures {\r\n        compose = true\r\n    }\r\n    composeOptions {\r\n        kotlinCompilerExtensionVersion = \"1.5.1\"\r\n    }\r\n    packaging {\r\n        resources {\r\n            excludes += \"/META-INF/{AL2.0,LGPL2.1}\"\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation(libs.androidx.core.ktx)\r\n    implementation(libs.androidx.lifecycle.runtime.ktx)\r\n    implementation(libs.androidx.activity.compose)\r\n    implementation(platform(libs.androidx.compose.bom))\r\n    implementation(libs.androidx.ui)\r\n    implementation(libs.androidx.ui.graphics)\r\n    implementation(libs.androidx.ui.tooling.preview)\r\n    implementation(libs.androidx.material3)\r\n    testImplementation(libs.junit)\r\n    androidTestImplementation(libs.androidx.junit)\r\n    androidTestImplementation(libs.androidx.espresso.core)\r\n    androidTestImplementation(platform(libs.androidx.compose.bom))\r\n    androidTestImplementation(libs.androidx.ui.test.junit4)\r\n    debugImplementation(libs.androidx.ui.tooling)\r\n    debugImplementation(libs.androidx.ui.test.manifest)\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
--- a/app/build.gradle.kts	(revision 4a4670fbe5ddacfaf35462d1c9edb05556cb95fe)
+++ b/app/build.gradle.kts	(date 1714497117501)
@@ -6,7 +6,8 @@
 android {
     namespace = "com.example.tesis1"
     compileSdk = 34
-
+    buildFeatures {
+        compose = true
     defaultConfig {
         applicationId = "com.example.tesis1"
         minSdk = 21
@@ -59,6 +60,8 @@
     implementation(libs.androidx.ui.graphics)
     implementation(libs.androidx.ui.tooling.preview)
     implementation(libs.androidx.material3)
+    implementation(libs.androidx.benchmark.macro)
+    implementation(libs.my.library)
     testImplementation(libs.junit)
     androidTestImplementation(libs.androidx.junit)
     androidTestImplementation(libs.androidx.espresso.core)
@@ -66,4 +69,4 @@
     androidTestImplementation(libs.androidx.ui.test.junit4)
     debugImplementation(libs.androidx.ui.tooling)
     debugImplementation(libs.androidx.ui.test.manifest)
-}
\ No newline at end of file
+}}
\ No newline at end of file
Index: app/src/main/java/com/example/tesis1/screens/RoomList.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.tesis1.screens\r\n\r\nimport androidx.compose.foundation.layout.*\r\nimport androidx.compose.material3.*\r\nimport androidx.compose.runtime.*\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.text.style.TextOverflow\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.foundation.text.KeyboardActions\r\nimport androidx.compose.foundation.text.KeyboardOptions\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.AccountCircle\r\nimport androidx.compose.material.icons.filled.Search\r\nimport androidx.compose.ui.text.input.ImeAction\r\nimport com.example.tesis1.ui.theme.*\r\nimport com.example.tesis1.ui.theme.AppTheme // Make sure to replace this with your actual theme package location\r\nimport kotlinx.coroutines.launch\r\n\r\n@Preview\r\n@Composable\r\nfun PreviewRoomListScreen() {\r\n    AppTheme {\r\n        MainScreen()\r\n    }\r\n}\r\n\r\n@Composable\r\nfun MainScreen() {\r\n    val scope = rememberCoroutineScope()\r\n    val (currentRoute, setCurrentRoute) = remember { mutableStateOf(\"Rooms\") }\r\n\r\n    Scaffold(\r\n        bottomBar = {\r\n            BottomNavigationBar(currentRoute = currentRoute, onRouteSelected = { route ->\r\n                scope.launch {\r\n                    setCurrentRoute(route)\r\n                }\r\n            })\r\n        }\r\n    ) { innerPadding ->\r\n        Box(modifier = Modifier.padding(innerPadding)) {\r\n            RoomListScreen()\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun RoomListScreen() {\r\n    Surface(color = surfaceLight) {\r\n        Column(\r\n            modifier = Modifier\r\n                .fillMaxSize()\r\n                .padding(16.dp),\r\n            verticalArrangement = Arrangement.Top,\r\n            horizontalAlignment = Alignment.CenterHorizontally\r\n        ) {\r\n            var searchText by remember { mutableStateOf(\"\") }\r\n            SearchBar(searchText = searchText, onSearchTextChange = { searchText = it })\r\n            Spacer(modifier = Modifier.height(16.dp))\r\n\r\n            val rooms = listOf(\r\n                \"Marketing 1\",\r\n                \"Marketing 2\",\r\n                \"Marketing 4\",\r\n                \"Marketing 5\",\r\n                \"Marketing 6\"\r\n            )\r\n            val filteredRooms = if (searchText.isBlank()) rooms else rooms.filter { it.contains(searchText, ignoreCase = true) }\r\n\r\n            filteredRooms.forEach { room ->\r\n                RoomItem(roomName = room, lastInteractionTime = \"12:34 PM\")\r\n                Spacer(modifier = Modifier.height(8.dp))\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun RoomItem(roomName: String, lastInteractionTime: String) {\r\n    Row(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n            .padding(8.dp),\r\n        verticalAlignment = Alignment.CenterVertically\r\n    ) {\r\n        Icon(\r\n            imageVector = Icons.Default.AccountCircle,\r\n            contentDescription = \"Room Image\",\r\n            modifier = Modifier.size(40.dp),\r\n            tint = MaterialTheme.colorScheme.onBackground\r\n        )\r\n        Spacer(modifier = Modifier.width(16.dp))\r\n        Text(\r\n            text = roomName,\r\n            style = MaterialTheme.typography.bodyLarge,\r\n            color = MaterialTheme.colorScheme.onSurfaceVariant,\r\n            maxLines = 1,\r\n            overflow = TextOverflow.Ellipsis,\r\n            modifier = Modifier.weight(1f)\r\n        )\r\n        Text(\r\n            text = lastInteractionTime,\r\n            style = MaterialTheme.typography.bodySmall,\r\n            color = MaterialTheme.colorScheme.onSurfaceVariant,\r\n            modifier = Modifier.padding(start = 8.dp)\r\n        )\r\n    }\r\n}\r\n\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun SearchBar(searchText: String, onSearchTextChange: (String) -> Unit) {\r\n    OutlinedTextField(\r\n        value = searchText,\r\n        onValueChange = onSearchTextChange,\r\n        placeholder = { Text(\"Search in History\") },\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n            .padding(horizontal = 8.dp),\r\n        shape = RoundedCornerShape(16.dp),\r\n        leadingIcon = { Icon(Icons.Filled.Search, contentDescription = \"Search\") },\r\n        singleLine = true,\r\n        keyboardOptions = KeyboardOptions.Default.copy(imeAction = ImeAction.Done),\r\n        keyboardActions = KeyboardActions.Default,\r\n        colors = TextFieldDefaults.outlinedTextFieldColors(\r\n            containerColor = MaterialTheme.colorScheme.primaryContainer\r\n        )\r\n    )\r\n}\r\n\r\n\r\n@Composable\r\nfun BottomNavigationBar(currentRoute: String, onRouteSelected: (String) -> Unit) {\r\n    NavigationBar(\r\n        containerColor =MaterialTheme.colorScheme.surface,\r\n        contentColor = MaterialTheme.colorScheme.onSurface\r\n    ) {\r\n        NavigationBarItem(\r\n            selected = currentRoute == \"Rooms\",\r\n            onClick = { onRouteSelected(\"Rooms\") },\r\n            label = { Text(\"Rooms\") },\r\n            modifier = Modifier.weight(1f),\r\n            icon = {}\r\n        )\r\n        NavigationBarItem(\r\n            selected = currentRoute == \"History\",\r\n            onClick = { onRouteSelected(\"History\") },\r\n            label = { Text(\"History\") },\r\n            modifier = Modifier.weight(1f),\r\n            icon = {}\r\n        )\r\n        NavigationBarItem(\r\n            selected = currentRoute == \"Settings\",\r\n            onClick = { onRouteSelected(\"Settings\") },\r\n            label = { Text(\"Settings\") },\r\n            modifier = Modifier.weight(1f),\r\n            icon = {}\r\n        )\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/tesis1/screens/RoomList.kt b/app/src/main/java/com/example/tesis1/screens/RoomList.kt
--- a/app/src/main/java/com/example/tesis1/screens/RoomList.kt	(revision 4a4670fbe5ddacfaf35462d1c9edb05556cb95fe)
+++ b/app/src/main/java/com/example/tesis1/screens/RoomList.kt	(date 1714497228475)
@@ -18,6 +18,8 @@
 import com.example.tesis1.ui.theme.*
 import com.example.tesis1.ui.theme.AppTheme // Make sure to replace this with your actual theme package location
 import kotlinx.coroutines.launch
+import androidx.compose.material.icons.*
+import androidx.compose.material.icons.filled.Settings
 
 @Preview
 @Composable
@@ -135,29 +137,26 @@
 @Composable
 fun BottomNavigationBar(currentRoute: String, onRouteSelected: (String) -> Unit) {
     NavigationBar(
-        containerColor =MaterialTheme.colorScheme.surface,
+        containerColor = MaterialTheme.colorScheme.surface,
         contentColor = MaterialTheme.colorScheme.onSurface
     ) {
         NavigationBarItem(
             selected = currentRoute == "Rooms",
             onClick = { onRouteSelected("Rooms") },
             label = { Text("Rooms") },
-            modifier = Modifier.weight(1f),
-            icon = {}
+            icon = { Icon(Icons.Filled.AccountCircle, contentDescription = "Rooms Icon") }
         )
         NavigationBarItem(
             selected = currentRoute == "History",
             onClick = { onRouteSelected("History") },
             label = { Text("History") },
-            modifier = Modifier.weight(1f),
-            icon = {}
+            icon = { Icon(Icons.Filled.VoiceChat, contentDescription = "Settings Icon") }
         )
         NavigationBarItem(
             selected = currentRoute == "Settings",
             onClick = { onRouteSelected("Settings") },
             label = { Text("Settings") },
-            modifier = Modifier.weight(1f),
-            icon = {}
+            icon = { Icon(Icons.Filled.Settings, contentDescription = "Settings Icon") }
         )
     }
 }
Index: gradle/libs.versions.toml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[versions]\r\nagp = \"8.3.2\"\r\nkotlin = \"1.9.0\"\r\ncoreKtx = \"1.13.0\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.1.5\"\r\nespressoCore = \"3.5.1\"\r\nlifecycleRuntimeKtx = \"2.7.0\"\r\nactivityCompose = \"1.9.0\"\r\ncomposeBom = \"2024.04.01\"\r\n\r\n[libraries]\r\nandroidx-core-ktx = { group = \"androidx.core\", name = \"core-ktx\", version.ref = \"coreKtx\" }\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\nandroidx-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nandroidx-espresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nandroidx-lifecycle-runtime-ktx = { group = \"androidx.lifecycle\", name = \"lifecycle-runtime-ktx\", version.ref = \"lifecycleRuntimeKtx\" }\r\nandroidx-activity-compose = { group = \"androidx.activity\", name = \"activity-compose\", version.ref = \"activityCompose\" }\r\nandroidx-compose-bom = { group = \"androidx.compose\", name = \"compose-bom\", version.ref = \"composeBom\" }\r\nandroidx-ui = { group = \"androidx.compose.ui\", name = \"ui\" }\r\nandroidx-ui-graphics = { group = \"androidx.compose.ui\", name = \"ui-graphics\" }\r\nandroidx-ui-tooling = { group = \"androidx.compose.ui\", name = \"ui-tooling\" }\r\nandroidx-ui-tooling-preview = { group = \"androidx.compose.ui\", name = \"ui-tooling-preview\" }\r\nandroidx-ui-test-manifest = { group = \"androidx.compose.ui\", name = \"ui-test-manifest\" }\r\nandroidx-ui-test-junit4 = { group = \"androidx.compose.ui\", name = \"ui-test-junit4\" }\r\nandroidx-material3 = { group = \"androidx.compose.material3\", name = \"material3\" }\r\n\r\n[plugins]\r\nandroidApplication = { id = \"com.android.application\", version.ref = \"agp\" }\r\njetbrainsKotlinAndroid = { id = \"org.jetbrains.kotlin.android\", version.ref = \"kotlin\" }\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
--- a/gradle/libs.versions.toml	(revision 4a4670fbe5ddacfaf35462d1c9edb05556cb95fe)
+++ b/gradle/libs.versions.toml	(date 1714496861231)
@@ -1,5 +1,8 @@
 [versions]
 agp = "8.3.2"
+androidxMaterial3AdaptiveNavigationSuite = "1.0.0-alpha06"
+androidx-macro-benchmark = "1.2.2"
+my-library = "1.4"
 kotlin = "1.9.0"
 coreKtx = "1.13.0"
 junit = "4.13.2"
@@ -8,8 +11,11 @@
 lifecycleRuntimeKtx = "2.7.0"
 activityCompose = "1.9.0"
 composeBom = "2024.04.01"
+material3WindowSizeClass = "1.2.1"
 
 [libraries]
+androidx-benchmark-macro = { group = "androidx.benchmark", name = "benchmark-macro-junit4", version.ref = "androidx-macro-benchmark" }
+my-library = { group = "com.myapplication", name = "mylibrary", version.ref = "my-library" }
 androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
 junit = { group = "junit", name = "junit", version.ref = "junit" }
 androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" default=\"true\" project-jdk-name=\"corretto-17\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 4a4670fbe5ddacfaf35462d1c9edb05556cb95fe)
+++ b/.idea/misc.xml	(date 1714588006291)
@@ -1,4 +1,3 @@
-<?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ExternalStorageConfigurationManager" enabled="true" />
   <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="corretto-17" project-jdk-type="JavaSDK">
